# personal_finance_api/alembic/versions/1c239b0b3bf1_refactor_enum_definitions_for_.py
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql # Esta importação é importante!

# revision identifiers, used by Alembic.
revision: str = '1c239b0b3bf1'
down_revision: Union[str, None] = 'fa68bbbfac5f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###

    # --- 1. Criar Tipos ENUM personalizados (DEVE VIR PRIMEIRO NO UPGRADE) ---
    # Cria o tipo ENUM 'status_transacao_enum' no PostgreSQL
    sa.Enum('PENDENTE', 'PAGO', 'RECEBIDO', 'CANCELADO', name='status_transacao_enum').create(op.get_bind(), checkfirst=True)
    # Cria o tipo ENUM 'tipo_transacao_enum' no PostgreSQL
    sa.Enum('RECEITA', 'DESPESA', name='tipo_transacao_enum').create(op.get_bind(), checkfirst=True)

    # --- 2. Operações para a tabela 'contas' ---

    # Adicionar saldo_inicial e saldo_atual como nullable=True
    op.add_column('contas', sa.Column('saldo_inicial', sa.Numeric(precision=10, scale=2), nullable=True))
    op.add_column('contas', sa.Column('saldo_atual', sa.Numeric(precision=10, scale=2), nullable=True))

    # Copiar dados da coluna 'saldo' existente para 'saldo_inicial' e 'saldo_atual'
    op.execute("UPDATE contas SET saldo_inicial = saldo, saldo_atual = saldo WHERE saldo IS NOT NULL")

    # Remover a coluna 'saldo' antiga
    op.drop_column('contas', 'saldo')

    # Alterar saldo_inicial e saldo_atual para nullable=False
    op.alter_column('contas', 'saldo_inicial',
               existing_type=sa.Numeric(precision=10, scale=2),
               nullable=False)
    op.alter_column('contas', 'saldo_atual',
               existing_type=sa.Numeric(precision=10, scale=2),
               nullable=False)

    # Adicionar as novas colunas 'instituicao' e 'observacoes' (já são nullable=True)
    op.add_column('contas', sa.Column('instituicao', sa.String(length=255), nullable=True))
    op.add_column('contas', sa.Column('observacoes', sa.Text(), nullable=True))

    # Remover 'data_atualizacao' da tabela 'listas_de_compras'
    op.drop_column('listas_de_compras', 'data_atualizacao')

    # --- 3. Operações para a tabela 'transacoes' ---

    # Adicionar novas colunas como nullable=True inicialmente
    op.add_column('transacoes', sa.Column('data_vencimento', sa.Date(), nullable=True))
    op.add_column('transacoes', sa.Column('entidade', sa.String(length=255), nullable=True))
    op.add_column('transacoes', sa.Column('data_pagamento_recebimento', sa.Date(), nullable=True))
    op.add_column('transacoes', sa.Column('parcelado', sa.Boolean(), nullable=True))
    op.add_column('transacoes', sa.Column('numero_parcela', sa.Integer(), nullable=True))
    op.add_column('transacoes', sa.Column('total_parcelas', sa.Integer(), nullable=True))
    op.add_column('transacoes', sa.Column('id_transacao_pai', sa.Integer(), nullable=True))

    # Adicionar a coluna 'status' como nullable=True
    op.add_column('transacoes', sa.Column('status', sa.Enum('PENDENTE', 'PAGO', 'RECEBIDO', 'CANCELADO', name='status_transacao_enum'), nullable=True))

    # Preencher a coluna 'status' com um valor padrão para linhas existentes
    op.execute(f"UPDATE transacoes SET status = 'PENDENTE' WHERE status IS NULL")

    # Alterar a coluna 'status' para nullable=False
    op.alter_column('transacoes', 'status',
               existing_type=postgresql.ENUM('PENDENTE', 'PAGO', 'RECEBIDO', 'CANCELADO', name='status_transacao_enum'),
               nullable=False)

    # Atualizar valores existentes na coluna 'tipo' antes de alterar o tipo
    op.execute("UPDATE transacoes SET tipo = 'RECEITA' WHERE tipo = 'income'")
    op.execute("UPDATE transacoes SET tipo = 'DESPESA' WHERE tipo = 'expense'")

    # Alterar a coluna 'tipo' para o tipo Enum, usando 'postgresql_using' para a conversão explícita
    op.alter_column('transacoes', 'tipo',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.Enum('RECEITA', 'DESPESA', name='tipo_transacao_enum'),
               existing_nullable=False,
               postgresql_using='tipo::tipo_transacao_enum') # <--- LINHA ADICIONADA/MODIFICADA AQUI

    # Criar a chave estrangeira para id_transacao_pai
    op.create_foreign_key(None, 'transacoes', 'transacoes', ['id_transacao_pai'], ['id'])

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###

    # --- Operações para a tabela 'transacoes' (inverso do upgrade) ---
    op.drop_constraint(None, 'transacoes', type_='foreignkey') # Ajuste o nome da constraint se tiver um nome específico
    op.alter_column('transacoes', 'tipo',
               existing_type=sa.Enum('RECEITA', 'DESPESA', name='tipo_transacao_enum'),
               type_=sa.VARCHAR(length=50),
               existing_nullable=False)
    # Se precisar reverter os valores de 'RECEITA'/'DESPESA' para 'income'/'expense'
    op.execute("UPDATE transacoes SET tipo = 'income' WHERE tipo = 'RECEITA'")
    op.execute("UPDATE transacoes SET tipo = 'expense' WHERE tipo = 'DESPESA'")

    op.drop_column('transacoes', 'id_transacao_pai')
    op.drop_column('transacoes', 'total_parcelas')
    op.drop_column('transacoes', 'numero_parcela')
    op.drop_column('transacoes', 'parcelado')
    op.drop_column('transacoes', 'data_pagamento_recebimento')
    op.drop_column('transacoes', 'status') # Remove a coluna status
    op.drop_column('transacoes', 'entidade')
    op.drop_column('transacoes', 'data_vencimento')

    # --- Operações para a tabela 'contas' (inverso do upgrade) ---
    op.add_column('listas_de_compras', sa.Column('data_atualizacao', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True))
    op.add_column('contas', sa.Column('saldo', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=False))
    op.drop_column('contas', 'observacoes')
    op.drop_column('contas', 'instituicao')
    op.drop_column('contas', 'saldo_atual')
    op.drop_column('contas', 'saldo_inicial')

    # --- 4. Dropar Tipos ENUM (DEVE VIR POR ÚLTIMO NO DOWNGRADE) ---
    sa.Enum('RECEITA', 'DESPESA', name='tipo_transacao_enum').drop(op.get_bind(), checkfirst=True)
    sa.Enum('PENDENTE', 'PAGO', 'RECEBIDO', 'CANCELADO', name='status_transacao_enum').drop(op.get_bind(), checkfirst=True)

    # ### end Alembic commands ###