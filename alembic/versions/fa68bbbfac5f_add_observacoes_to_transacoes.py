"""add observacoes to transacoes

Revision ID: fa68bbbfac5f
Revises: 3c0c7b0ebe85
Create Date: 2025-05-28 01:38:33.308883

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'fa68bbbfac5f'
down_revision: Union[str, None] = '3c0c7b0ebe85'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_categories_id'), table_name='categories')
    op.drop_table('categories')
    op.drop_table('historico_preco_produtos')
    op.drop_index(op.f('ix_itens_lista_compras_id'), table_name='itens_lista_compras')
    op.drop_table('itens_lista_compras')
    op.drop_index(op.f('ix_listas_compras_id'), table_name='listas_compras')
    op.drop_table('listas_compras')
    op.drop_column('itens_da_lista', 'data_atualizacao')
    op.add_column('listas_de_compras', sa.Column('ativa', sa.Boolean(), nullable=True))
    op.drop_column('listas_de_compras', 'data_atualizacao')
    op.add_column('transacoes', sa.Column('observacoes', sa.Text(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('transacoes', 'observacoes')
    op.add_column('listas_de_compras', sa.Column('data_atualizacao', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True))
    op.drop_column('listas_de_compras', 'ativa')
    op.add_column('itens_da_lista', sa.Column('data_atualizacao', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=False))
    op.create_table('listas_compras',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('listas_compras_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('usuario_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('nome', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('tipo', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('valor_maximo', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
    sa.Column('data_criacao', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('data_atualizacao', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('ativa', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['usuario_id'], ['users.id'], name='listas_compras_usuario_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='listas_compras_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index(op.f('ix_listas_compras_id'), 'listas_compras', ['id'], unique=False)
    op.create_table('itens_lista_compras',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('lista_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('nome', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('quantidade', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
    sa.Column('unidade', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('preco_estimado', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
    sa.Column('comprado', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('observacoes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('data_adicionado', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['lista_id'], ['listas_compras.id'], name=op.f('itens_lista_compras_lista_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('itens_lista_compras_pkey'))
    )
    op.create_index(op.f('ix_itens_lista_compras_id'), 'itens_lista_compras', ['id'], unique=False)
    op.create_table('historico_preco_produtos',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('nome_produto', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('unidade_medida', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('valor_registrado', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=False),
    sa.Column('data_registro', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=False),
    sa.Column('usuario_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['usuario_id'], ['users.id'], name=op.f('fk_usuario'), ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name=op.f('historicoprecoproduto_pkey'))
    )
    op.create_table('categories',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('usuario_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('nome', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('tipo', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('cor', sa.VARCHAR(length=7), autoincrement=False, nullable=True),
    sa.Column('icone', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('data_criacao', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('data_atualizacao', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['usuario_id'], ['users.id'], name=op.f('categories_usuario_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('categories_pkey'))
    )
    op.create_index(op.f('ix_categories_id'), 'categories', ['id'], unique=False)
    # ### end Alembic commands ###
